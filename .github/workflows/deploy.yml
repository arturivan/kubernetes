name: Kubernetes Debug Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch (or adjust as needed)

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup Tailscale to connect to the internal Kubernetes cluster
    - name: Setup Tailscale
      uses: tailscale/github-action@v2
      with:
        authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}

    # Step 3: Install kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.26.0

    # Step 4: Configure kubectl using the kubeconfig stored in secrets
    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config

    # Step 5: Verify kubectl configuration
    - name: Display kubectl config
      run: kubectl config view --minify

    # Step 6: Verify current kubectl context
    - name: Verify current kubectl context
      run: kubectl config current-context

    # Step 7: Check if the Kubernetes API server is accessible
    - name: Test Kubernetes API server accessibility
      run: |
        kubectl cluster-info || echo "Failed to connect to the Kubernetes API server"

    # Step 8: Check kubectl version to confirm it's working
    - name: Verify kubectl version
      run: kubectl version --client

    # Step 9: Get the nodes in the cluster (to confirm cluster health)
    - name: List cluster nodes
      run: kubectl get nodes || echo "Failed to get nodes in the cluster"

    # Step 10: List available deployments in the default namespace (confirm deployment access)
    - name: List deployments
      run: kubectl get deployments || echo "Failed to get deployments"

    # Step 11: Check Kubernetes namespaces (optional check to confirm permissions)
    - name: List namespaces
      run: kubectl get namespaces || echo "Failed to get namespaces"

    # Step 12: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml || echo "Failed to apply deployment.yaml"


