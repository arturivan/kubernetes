name: Kubeflow Spark Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - "images/**" # Exclude changes in the images directory
  pull_request:
    branches:
      - main
    paths-ignore:
      - "images/**" # Exclude changes in the images directory
      - "bicep/**" # this as well

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      # Step 4: Set variables
      - name: Set environment variables
        run: echo "IMAGE_NAME=${{ secrets.ACR_NAME }}.azurecr.io/spark-text-transform:latest" >> $GITHUB_ENV

      # Step 5: Build the Docker image
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      # Step 6: Push Docker Image to Azure Container Registry
      - name: Push Docker Image
        run: docker push $IMAGE_NAME

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 7: Setup Tailscale for private Kubernetes access
      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}

      - name: Check Tailscale connection
        run: |
          tailscale status
          ping -c 4 100.117.55.121 # Kubernetes server IP

      # Step 8: Install kubectl
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      # Step 9: Configure kubectl using the kubeconfig stored in secrets
      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config

      # Step 10: Verify Kubernetes connection
      - name: Verify Kubernetes context
        run: |
          kubectl config use-context default || echo "No context set, checking available contexts."
          kubectl cluster-info || echo "Failed to connect to the Kubernetes API server"

      # Step 12: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f spark-app.yaml || echo "Failed to apply spark-app.yaml"
